/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.CarDetails;
import model.CarsHistory;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.sql.Timestamp;
/**
 *
 * @author rutvi patel
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    
    CarsHistory history;
    public ViewJPanel(CarsHistory history) {
        initComponents();
        
        this.history = history;
        populateTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblViewModifyDetails = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCars = new javax.swing.JTable();
        lblCompany = new javax.swing.JLabel();
        txtCompany = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblModel = new javax.swing.JLabel();
        txtModel = new javax.swing.JTextField();
        txtManYear = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtSerialNumber = new javax.swing.JTextField();
        lblManYear = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblSerialNo = new javax.swing.JLabel();
        lblNoOfSeats = new javax.swing.JLabel();
        txtminSeat = new javax.swing.JTextField();
        jCheckBoxManValid = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        lblAvailable = new javax.swing.JLabel();
        jCheckBoxAvailable = new javax.swing.JCheckBox();
        btnSearch = new javax.swing.JButton();
        lblManufactureYear = new javax.swing.JLabel();
        txtUCompany = new javax.swing.JTextField();
        txtUModel = new javax.swing.JTextField();
        lblAvailability = new javax.swing.JLabel();
        txtManufactureYear = new javax.swing.JTextField();
        lblModel1 = new javax.swing.JLabel();
        lblUCompany = new javax.swing.JLabel();
        lblManExYear = new javax.swing.JLabel();
        lblNoOfSeats1 = new javax.swing.JLabel();
        txtMaintainanceExpiryYear = new javax.swing.JTextField();
        txtUNoOfSeats = new javax.swing.JTextField();
        lblSerialNumber = new javax.swing.JLabel();
        txtUSerialNumber = new javax.swing.JTextField();
        lblUCity = new javax.swing.JLabel();
        txtUCity = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        btnView = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jCheckBoxAvail = new javax.swing.JCheckBox();
        jSeparator2 = new javax.swing.JSeparator();
        txtmaxSeat = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        lblViewModifyDetails.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblViewModifyDetails.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblViewModifyDetails.setText("View/Modify Car Details");

        tblCars.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Company", "Model Name", "Man Year", "Man. Expiry Year", "Serial Number", "Availability", "Updated TimeStamp"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCars.setFocusTraversalPolicyProvider(true);
        tblCars.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCarsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCars);

        lblCompany.setText("Company :");

        txtCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCompanyActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Filters :");

        lblModel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblModel.setText("Model Name:");

        lblManYear.setText("Man. Year :");

        lblCity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCity.setText("City :");

        lblSerialNo.setText("Serial Number :");

        lblNoOfSeats.setText("No Of Seats:");

        jCheckBoxManValid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxManValidActionPerformed(evt);
            }
        });

        jLabel4.setText("Maintainance valid:");

        lblAvailable.setText("Available ?");

        jCheckBoxAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAvailableActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblManufactureYear.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblManufactureYear.setText("Man. Year :");

        lblAvailability.setText("Available :");

        lblModel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblModel1.setText("Car Model:");

        lblUCompany.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblUCompany.setText("Company:");

        lblManExYear.setText("Maintainance Expiry Year:");

        lblNoOfSeats1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNoOfSeats1.setText("No Of Seats:");

        lblSerialNumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSerialNumber.setText("Serial Number:");

        lblUCity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblUCity.setText("City :");

        txtUCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUCityActionPerformed(evt);
            }
        });

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblViewModifyDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblNoOfSeats)
                                            .addComponent(lblCompany, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblManYear, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtManYear)
                                            .addComponent(txtCompany)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(txtminSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtmaxSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(62, 62, 62)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblAvailable)
                                                    .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblModel, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel4)
                                                    .addComponent(lblSerialNo))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jCheckBoxManValid, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(189, 189, 189)
                                                .addComponent(jCheckBoxAvailable)
                                                .addGap(277, 277, 277)
                                                .addComponent(btnSearch)))))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnView)
                        .addGap(27, 27, 27)
                        .addComponent(btnEdit)
                        .addGap(29, 29, 29)
                        .addComponent(btnDelete)
                        .addGap(37, 37, 37))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblModel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblUCompany, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblManufactureYear)))
                            .addComponent(lblSerialNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtUModel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUCompany, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtManufactureYear, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUSerialNumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblManExYear)
                                            .addComponent(lblAvailability)
                                            .addComponent(lblUCity, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(27, 27, 27))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblNoOfSeats1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMaintainanceExpiryYear)
                                    .addComponent(txtUNoOfSeats, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCheckBoxAvail)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(157, 157, 157)
                                .addComponent(txtUCity, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate)))
                .addContainerGap())
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnEdit, btnUpdate, btnView});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblViewModifyDetails)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))
                            .addComponent(jCheckBoxManValid))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblSerialNo))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtManYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblManYear)
                                    .addComponent(lblCity)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSearch)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblNoOfSeats)
                                .addComponent(txtminSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtmaxSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addComponent(lblAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBoxAvailable)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lblCompany))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblModel))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUCompany))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblModel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblManufactureYear)
                            .addComponent(txtManufactureYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSerialNumber)
                            .addComponent(txtUSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUCity)
                            .addComponent(txtUCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblManExYear)
                            .addComponent(txtMaintainanceExpiryYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAvailability)
                            .addComponent(jCheckBoxAvail))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUNoOfSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNoOfSeats1))))
                .addGap(23, 23, 23))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDelete, btnEdit, btnUpdate, btnView});

    }// </editor-fold>//GEN-END:initComponents

    private void txtCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCompanyActionPerformed
        // TODO add your handling code here:
        
        
        
    }//GEN-LAST:event_txtCompanyActionPerformed

    private void jCheckBoxManValidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxManValidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxManValidActionPerformed

    private void txtUCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUCityActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        int SelectedRowIndex = tblCars.getSelectedRow();
        
        if(SelectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(this, "Please Select a row to delete!");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel)tblCars.getModel();
        CarDetails SelectedCar = (CarDetails)model.getValueAt(SelectedRowIndex, 0);
        
        history.deleteCar(SelectedCar);
        
        JOptionPane.showMessageDialog(this, "Car Details Deleted.");
        
        populateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        
        int SelectedRowIndex = tblCars.getSelectedRow();
        
        if(SelectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(this, "Please Select a row to view!");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel)tblCars.getModel();
        CarDetails SelectedCar = (CarDetails)model.getValueAt(SelectedRowIndex, 0);
        
        if(SelectedCar.getAvailability() == true){
            jCheckBoxAvailable.setSelected(true);
        }
        else{
            jCheckBoxAvailable.setSelected(false);
        }
        
        txtUCompany.setText(SelectedCar.getCompany());
        txtUModel.setText(SelectedCar.getCarModel());
        txtManufactureYear.setText(String.valueOf(SelectedCar.getManExYear()));
        txtUNoOfSeats.setText(String.valueOf(SelectedCar.getNoOfSeats()));
        txtUSerialNumber.setText(String.valueOf(SelectedCar.getSerialNo()));
        txtUCity.setText(SelectedCar.getCity());
        txtMaintainanceExpiryYear.setText(SelectedCar.getManExYear());
        
        
       
    }//GEN-LAST:event_btnViewActionPerformed

    private void tblCarsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCarsMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tblCarsMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String Company = txtUCompany.getText();
        String CarModel = txtUModel.getText();
        int ManYear = Integer.parseInt(txtManufactureYear.getText());
        int NoOfSeats = Integer.parseInt(txtUNoOfSeats.getText());
        int SerialNo = Integer.parseInt(txtUSerialNumber.getText());
        String City = txtUCity.getText();
        String ManExYear = txtMaintainanceExpiryYear.getText();
        Boolean available = false;

        if (jCheckBoxAvailable.isSelected()){
            available = true;
        }
        
        int SelectedRowIndex = tblCars.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)tblCars.getModel();
        CarDetails SelectedCar = (CarDetails)model.getValueAt(SelectedRowIndex, 0);
        
        Calendar calendar = Calendar.getInstance();
        java.util.Date now = calendar.getTime();
        java.sql.Timestamp currentTimeStamp = new java.sql.Timestamp(now.getTime());

        CarDetails cd = history.AddNewDetails();
        
        cd.setCompany(Company);
        cd.setCarModel(CarModel);
        cd.setManYear(ManYear);
        cd.setNoOfSeats(NoOfSeats);
        cd.setSerialNo(SerialNo);
        cd.setCity(City);
        cd.setManExYear(ManExYear);
        cd.setUpdatedDate(currentTimeStamp.toString());
        cd.setAvailability(available);
        
        txtUCompany.setText("");
        txtUModel.setText("");
        txtManufactureYear.setText("");
        txtUNoOfSeats.setText("");
        txtUSerialNumber.setText("");
        txtUCity.setText("");
        txtMaintainanceExpiryYear.setText("");
        jCheckBoxAvailable.setSelected(false);
       
        history.deleteCar(SelectedCar);
         JOptionPane.showMessageDialog(this, "Details has been Updated!!");
        populateTable();
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        
        int SelectedRowIndex = tblCars.getSelectedRow();
        
        if(SelectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(this, "Please Select a row to view!");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel)tblCars.getModel();
        CarDetails SelectedCar = (CarDetails)model.getValueAt(SelectedRowIndex, 0);
        
        if(SelectedCar.getAvailability() == true){
            jCheckBoxAvailable.setSelected(true);
        }
        else{
            jCheckBoxAvailable.setSelected(false);
        }
        
        txtUCompany.setText(SelectedCar.getCompany());
        txtUModel.setText(SelectedCar.getCarModel());
        txtManufactureYear.setText(String.valueOf(SelectedCar.getManExYear()));
        txtUNoOfSeats.setText(String.valueOf(SelectedCar.getNoOfSeats()));
        txtUSerialNumber.setText(String.valueOf(SelectedCar.getSerialNo()));
        txtUCity.setText(SelectedCar.getCity());
        txtMaintainanceExpiryYear.setText(SelectedCar.getManExYear());
        
        
    }//GEN-LAST:event_btnEditActionPerformed

    private void jCheckBoxAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAvailableActionPerformed
        // TODO add your handling code here:
        
        if (jCheckBoxAvailable.isSelected()){
            populateTableForAvailability();
        }
        else{
            populateTable();
        }
    }//GEN-LAST:event_jCheckBoxAvailableActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        
        if(txtminSeat.getText()!= null && Integer.parseInt(txtminSeat.getText()) > 0 && txtmaxSeat.getText()!= null && Integer.parseInt(txtmaxSeat.getText()) < 11){
            populateTableForMinMaxSeat(Integer.parseInt(txtminSeat.getText()), Integer.parseInt(txtmaxSeat.getText()));
        }
        
        populateTableForCompany();
        populateTableForModel();
        populateTableForSerialNumber();
    }//GEN-LAST:event_btnSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JCheckBox jCheckBoxAvail;
    private javax.swing.JCheckBox jCheckBoxAvailable;
    private javax.swing.JCheckBox jCheckBoxManValid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblAvailability;
    private javax.swing.JLabel lblAvailable;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCompany;
    private javax.swing.JLabel lblManExYear;
    private javax.swing.JLabel lblManYear;
    private javax.swing.JLabel lblManufactureYear;
    private javax.swing.JLabel lblModel;
    private javax.swing.JLabel lblModel1;
    private javax.swing.JLabel lblNoOfSeats;
    private javax.swing.JLabel lblNoOfSeats1;
    private javax.swing.JLabel lblSerialNo;
    private javax.swing.JLabel lblSerialNumber;
    private javax.swing.JLabel lblUCity;
    private javax.swing.JLabel lblUCompany;
    private javax.swing.JLabel lblViewModifyDetails;
    private javax.swing.JTable tblCars;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCompany;
    private javax.swing.JTextField txtMaintainanceExpiryYear;
    private javax.swing.JTextField txtManYear;
    private javax.swing.JTextField txtManufactureYear;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtSerialNumber;
    private javax.swing.JTextField txtUCity;
    private javax.swing.JTextField txtUCompany;
    private javax.swing.JTextField txtUModel;
    private javax.swing.JTextField txtUNoOfSeats;
    private javax.swing.JTextField txtUSerialNumber;
    private javax.swing.JTextField txtmaxSeat;
    private javax.swing.JTextField txtminSeat;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel)tblCars.getModel();
        model.setRowCount(0);
        
        for (CarDetails cd : history.getHistory())
        {
            Object[] row = new Object[7];
            row[0] = cd;
            row[1] = cd.getCarModel();
            row[2] = cd.getManYear();
            row[3] = cd.getManExYear();
            row[4] = cd.getSerialNo();
            row[5] = cd.getAvailability();
            row[5] = cd.getUpdatedDate();
            
            model.addRow(row);
        }
    }

    private void populateTableForAvailability() {
       DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
       model.setRowCount(0);

        for(CarDetails cd : history.getHistory() ){
            if (cd.getAvailability().equals(true)){
                Object[] row = new Object[7];

                row[0] = cd;
                row[1] = cd.getCarModel();
                row[2] = cd.getManYear();
                row[3] = cd.getManExYear();
                row[4] = cd.getSerialNo();
                row[5] = cd.getAvailability();
                row[5] = cd.getUpdatedDate();
                row[6] = cd.getUpdatedDate();

                model.addRow(row);
            }

        }
    } 

    private void populateTableForCompany() {
       DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
       model.setRowCount(0);

        for(CarDetails cd : history.getHistory() ){
            if (cd.getCompany().contains(txtCompany.getText())){
                Object[] row = new Object[7];

                row[0] = cd;
                row[1] = cd.getCarModel();
                row[2] = cd.getManYear();
                row[3] = cd.getManExYear();
                row[4] = cd.getSerialNo();
                row[5] = cd.getAvailability();
                row[5] = cd.getUpdatedDate();
                row[6] = cd.getUpdatedDate();

                model.addRow(row);
            }

        }
    }

    private void populateTableForModel() {
       DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
       model.setRowCount(0);

        for(CarDetails cd : history.getHistory()){

            if (cd.getCarModel().contains(txtModel.getText())){
                Object[] row = new Object[7];

                row[0] = cd;
                row[1] = cd.getCarModel();
                row[2] = cd.getManYear();
                row[3] = cd.getManExYear();
                row[4] = cd.getSerialNo();
                row[5] = cd.getAvailability();
                row[5] = cd.getUpdatedDate();
                row[6] = cd.getUpdatedDate();

                model.addRow(row);
            }

        }
    }

    private void populateTableForMinMaxSeat(int min, int max) {
       DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
       model.setRowCount(0);

        for(CarDetails cd : history.getHistory() ){
            if (cd.getNoOfSeats()> min && cd.getNoOfSeats()< max){
                Object[] row = new Object[7];

                row[0] = cd;
                row[1] = cd.getCarModel();
                row[2] = cd.getManYear();
                row[3] = cd.getManExYear();
                row[4] = cd.getSerialNo();
                row[5] = cd.getAvailability();
                row[5] = cd.getUpdatedDate();
                row[6] = cd.getUpdatedDate();

                model.addRow(row);
            }

        }
    }

    private void populateTableForSerialNumber() {
        DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
        model.setRowCount(0);

        for(CarDetails cd : history.getHistory()){
            if(String.valueOf(cd.getSerialNo()).equalsIgnoreCase(txtSerialNumber.getText())){
                Object[] row = new Object[7];

                row[0] = cd;
                row[1] = cd.getCarModel();
                row[2] = cd.getManYear();
                row[3] = cd.getManExYear();
                row[4] = cd.getSerialNo();
                row[5] = cd.getAvailability();
                row[5] = cd.getUpdatedDate();
                row[6] = cd.getUpdatedDate();

                model.addRow(row);
            }

        }
    }
}
